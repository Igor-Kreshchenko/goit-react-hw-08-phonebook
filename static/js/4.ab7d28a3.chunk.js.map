{"version":3,"sources":["components/Loader/Loader.module.css","components/Filter/Filter.module.css","components/Section/Section.js","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.js","redux/contacts/contacts-operations.js","components/ContactList/ContactItem/ContactItem.js","components/Loader/Loader.js","components/ContactList/ContactList.js","components/Filter/Filter.js","views/ContactsView.js","components/ContactList/ContactList.module.css","App.module.css","components/Section/Section.module.css","components/ContactForm/ContactForm.module.css"],"names":["module","exports","Section","title","children","className","styles","section","defaultProps","getContacts","state","contacts","items","getIsLoading","loading","getError","error","getFilter","filter","getFilteredContacts","createSelector","normalizedFilter","toLowerCase","name","includes","ContactForm","number","handleChange","event","target","value","setState","handleSubmit","preventDefault","props","map","contact","alert","onSubmit","resetForm","this","label","input","type","pattern","required","onChange","button","Component","connect","dispatch","addContactRequest","axios","post","then","data","addContactSuccess","catch","addContactError","message","addContact","onClick","id","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","deleteContact","item","AppLoader","Loader","style","color","height","width","ContactList","fetchContacts","isLoadingContacts","list","fetchContactsRequest","get","fetchContactsSuccess","fetchContactsError","filterContacts","TodosView","wrapper"],"mappings":"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","file":"static/js/4.ab7d28a3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__1czZA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__1KCuv\",\"input\":\"Filter_input__2MEzR\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Section.module.css'\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section className={styles.section}>\r\n      <h2 className={styles.title}>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n\r\nSection.defaultProps = {\r\n  title: 'New section',\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n};","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const getContacts = state => state.contacts.items;\r\nexport const getIsLoading = state => state.contacts.loading;\r\nexport const getError = state => state.contacts.error;\r\nexport const getFilter = state => state.contacts.filter;\r\nexport const getFilteredContacts = createSelector([getContacts, getFilter], (contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(({name}) =>\r\n    name.toLowerCase().includes(normalizedFilter),\r\n  );});","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addContact } from '../../redux/contacts/contacts-operations';\r\nimport styles from './ContactForm.module.css';\r\nimport { getContacts } from '../../redux/contacts/contacts-selectors';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = event => {\r\n    const { name, value } = event.target;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    const { name } = this.state;\r\n    const names = this.props.contacts.map(contact => contact.name);\r\n\r\n    names.includes(name)\r\n      ? alert(`${name} is already in contacts`)\r\n      : this.props.onSubmit({ ...this.state });\r\n\r\n    this.resetForm();\r\n  };\r\n\r\n  resetForm = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    const { handleSubmit, handleChange } = this;\r\n\r\n    return (\r\n      <form onSubmit={handleSubmit}>\r\n        <label className={styles.label}>\r\n          Name\r\n          <input\r\n            className={styles.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            value={name}\r\n            onChange={handleChange}\r\n          ></input>\r\n        </label>\r\n\r\n        <label className={styles.label}>\r\n          Number\r\n          <input\r\n            className={styles.input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            value={number}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n\r\n        <button className={styles.button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: getContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: contact => {\r\n    return dispatch(addContact(contact));\r\n  },\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import axios from 'axios';\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n} from './contacts-actions';\r\n\r\nexport const fetchContacts = () => dispatch => {\r\n  dispatch(fetchContactsRequest());\r\n\r\n  axios\r\n    .get('/contacts')\r\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)))\r\n    .catch(error => dispatch(fetchContactsError(error.message)));\r\n};\r\n\r\nexport const addContact = contact => dispatch => {\r\n  dispatch(addContactRequest());\r\n\r\n  axios\r\n    .post('/contacts', contact)\r\n    .then(({ data }) => dispatch(addContactSuccess(data)))\r\n    .catch(error => dispatch(addContactError(error.message)));\r\n};\r\n\r\nexport const deleteContact = id => dispatch => {\r\n  dispatch(deleteContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(deleteContactSuccess(id)))\r\n    .catch(error => dispatch(deleteContactError(error.message)));\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { deleteContact } from '../../../redux/contacts/contacts-operations';\r\nimport { connect } from 'react-redux';\r\nimport styles from '../ContactList.module.css';\r\n\r\nconst ContactItem = ({ id, name, number, onClick }) => {\r\n  return (\r\n    <li className={styles.item}>\r\n      <p className={styles.name}>{name}</p>\r\n      <p className={styles.number}>{number}</p>\r\n      <button\r\n        className={styles.button}\r\n        type=\"button\"\r\n        onClick={() => onClick(id)}\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onClick: id => dispatch(deleteContact(id)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactItem);\r\n\r\nContactItem.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport Loader from 'react-loader-spinner';\r\nimport styles from './Loader.module.css';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\n\r\nconst AppLoader = () => {\r\n  return (\r\n    <div className={styles.Loader}>\r\n      <Loader\r\n        style={styles}\r\n        type=\"ThreeDots\"\r\n        color=\"#3f51b5\"\r\n        height={100}\r\n        width={100}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppLoader;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport ContactItem from './ContactItem';\r\nimport Loader from '../Loader';\r\nimport styles from './ContactList.module.css';\r\nimport { fetchContacts } from '../../redux/contacts/contacts-operations';\r\nimport {\r\n  getFilteredContacts,\r\n  getIsLoading,\r\n  getError,\r\n} from '../../redux/contacts/contacts-selectors';\r\n\r\nclass ContactList extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchContacts();\r\n  }\r\n\r\n  render() {\r\n    const { contacts, isLoadingContacts, error } = this.props;\r\n\r\n    return (\r\n      <>\r\n        {isLoadingContacts && <Loader />}\r\n        {error && <h2>404 Not Found</h2>}\r\n\r\n        <ul className={styles.list}>\r\n          {contacts.map(contact => {\r\n            const { id, name, number } = contact;\r\n\r\n            return <ContactItem key={id} name={name} number={number} id={id} />;\r\n          })}\r\n        </ul>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: getFilteredContacts(state),\r\n  isLoadingContacts: getIsLoading(state),\r\n  error: getError(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchContacts: () => dispatch(fetchContacts()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Filter.module.css';\r\nimport { connect } from 'react-redux';\r\nimport { filterContacts } from '../../redux/contacts/contacts-actions';\r\nimport { getFilter } from '../../redux/contacts/contacts-selectors';\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <label className={styles.label}>\r\n      Find contacts by name\r\n      <input\r\n        className={styles.input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  value: getFilter(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: ({ target: { value } }) => dispatch(filterContacts(value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n","import React, { Component } from 'react';\r\nimport styles from '../App.module.css';\r\nimport Section from '../components/Section';\r\nimport ContactForm from '../components/ContactForm';\r\nimport ContactList from '../components/ContactList';\r\nimport Filter from '../components/Filter';\r\n\r\nclass TodosView extends Component {\r\n  render() {\r\n    return (\r\n      <div className={styles.wrapper}>\r\n        <Section title=\"Phonebook\">\r\n          <ContactForm />\r\n        </Section>\r\n\r\n        <Section title=\"Contacts\">\r\n          <Filter />\r\n          <ContactList />\r\n        </Section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodosView;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__mpgma\",\"item\":\"ContactList_item__-IXdU\",\"name\":\"ContactList_name__1LfTK\",\"number\":\"ContactList_number__2XjsQ\",\"button\":\"ContactList_button__2kizc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__1ilke\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3ZtTf\",\"title\":\"Section_title__17yUo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactForm_label__2RLiI\",\"input\":\"ContactForm_input__jKY3j\",\"button\":\"ContactForm_button__1hUD8\"};"],"sourceRoot":""}