{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Section/Section.module.css","components/Loader/Loader.module.css","components/Filter/Filter.module.css","App.module.css","components/ContactList/ContactList.module.css","components/Section/Section.js","redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.js","components/ContactList/ContactItem/ContactItem.js","components/Loader/Loader.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js"],"names":["module","exports","Section","title","children","className","styles","section","defaultProps","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","filterContacts","axios","defaults","baseURL","getContacts","state","contacts","items","getIsLoading","loading","getError","error","getFilter","filter","getFilteredContacts","createSelector","normalizedFilter","toLowerCase","name","includes","ContactForm","number","handleChange","event","target","value","setState","handleSubmit","preventDefault","props","map","contact","alert","onSubmit","resetForm","this","label","input","type","pattern","required","onChange","button","Component","connect","dispatch","post","then","data","catch","addContact","onClick","id","delete","deleteContact","item","AppLoader","Loader","style","color","height","width","ContactList","fetchContacts","isLoadingContacts","list","get","App","wrapper","itemsReducer","createReducer","_","payload","filterReducer","loadingReducer","errorReducer","contactsReducer","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.79bdd06e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactForm_label__2RLiI\",\"input\":\"ContactForm_input__jKY3j\",\"button\":\"ContactForm_button__1hUD8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3ZtTf\",\"title\":\"Section_title__17yUo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__1czZA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__1KCuv\",\"input\":\"Filter_input__2MEzR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__1ilke\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__mpgma\",\"item\":\"ContactList_item__-IXdU\",\"name\":\"ContactList_name__1LfTK\",\"number\":\"ContactList_number__2XjsQ\",\"button\":\"ContactList_button__2kizc\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Section.module.css'\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section className={styles.section}>\r\n      <h2 className={styles.title}>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n\r\nSection.defaultProps = {\r\n  title: 'New section',\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactsRequest = createAction(\r\n  'contacts/fetchContactsRequest',\r\n);\r\nexport const fetchContactsSuccess = createAction(\r\n  'contacts/fetchContactsSuccess',\r\n);\r\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction(\r\n  'contacts/deleteContactRequest',\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  'contacts/deleteContactSuccess',\r\n);\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nexport const filterContacts = createAction('contacts/filter');\r\n","import axios from 'axios';\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n} from './contacts-actions';\r\n\r\naxios.defaults.baseURL = 'http://localhost:7777';\r\n\r\nexport const fetchContacts = () => dispatch => {\r\n  dispatch(fetchContactsRequest());\r\n\r\n  axios\r\n    .get('/contacts')\r\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)))\r\n    .catch(error => dispatch(fetchContactsError(error)));\r\n};\r\n\r\nexport const addContact = contact => dispatch => {\r\n  dispatch(addContactRequest());\r\n\r\n  axios\r\n    .post('/contacts', contact)\r\n    .then(({ data }) => dispatch(addContactSuccess(data)))\r\n    .catch(error => dispatch(addContactError(error)));\r\n};\r\n\r\nexport const deleteContact = id => dispatch => {\r\n  dispatch(deleteContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(deleteContactSuccess(id)))\r\n    .catch(error => dispatch(deleteContactError(error)));\r\n};\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const getContacts = state => state.contacts.items;\r\nexport const getIsLoading = state => state.contacts.loading;\r\nexport const getError = state => state.contacts.error;\r\nexport const getFilter = state => state.contacts.filter;\r\nexport const getFilteredContacts = createSelector([getContacts, getFilter], (contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(({name}) =>\r\n    name.toLowerCase().includes(normalizedFilter),\r\n  );});","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addContact } from '../../redux/contacts/contacts-operations';\r\nimport styles from './ContactForm.module.css';\r\nimport { getContacts } from '../../redux/contacts/contacts-selectors';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = event => {\r\n    const { name, value } = event.target;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    const { name } = this.state;\r\n    const names = this.props.contacts.map(contact => contact.name);\r\n\r\n    names.includes(name)\r\n      ? alert(`${name} is already in contacts`)\r\n      : this.props.onSubmit({ ...this.state });\r\n\r\n    this.resetForm();\r\n  };\r\n\r\n  resetForm = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    const { handleSubmit, handleChange } = this;\r\n\r\n    return (\r\n      <form onSubmit={handleSubmit}>\r\n        <label className={styles.label}>\r\n          Name\r\n          <input\r\n            className={styles.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            value={name}\r\n            onChange={handleChange}\r\n          ></input>\r\n        </label>\r\n\r\n        <label className={styles.label}>\r\n          Number\r\n          <input\r\n            className={styles.input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            value={number}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n\r\n        <button className={styles.button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: getContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: contact => {\r\n    return dispatch(addContact(contact));\r\n  },\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { deleteContact } from '../../../redux/contacts/contacts-operations';\r\nimport { connect } from 'react-redux';\r\nimport styles from '../ContactList.module.css';\r\n\r\nconst ContactItem = ({ id, name, number, onClick }) => {\r\n  return (\r\n    <li className={styles.item}>\r\n      <p className={styles.name}>{name}</p>\r\n      <p className={styles.number}>{number}</p>\r\n      <button\r\n        className={styles.button}\r\n        type=\"button\"\r\n        onClick={() => onClick(id)}\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onClick: id => dispatch(deleteContact(id)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactItem);\r\n\r\nContactItem.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport Loader from 'react-loader-spinner';\r\nimport styles from './Loader.module.css';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\n\r\nconst AppLoader = () => {\r\n  return (\r\n    <div className={styles.Loader}>\r\n      <Loader\r\n        style={styles}\r\n        type=\"ThreeDots\"\r\n        color=\"#3f51b5\"\r\n        height={100}\r\n        width={100}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppLoader;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport ContactItem from './ContactItem';\r\nimport Loader from '../Loader';\r\nimport styles from './ContactList.module.css';\r\nimport { fetchContacts } from '../../redux/contacts/contacts-operations';\r\nimport { getFilteredContacts, getIsLoading, getError } from '../../redux/contacts/contacts-selectors';\r\n\r\nclass ContactList extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchContacts();\r\n  }\r\n\r\n  render() {\r\n    const { contacts, isLoadingContacts, error } = this.props;\r\n\r\n    return (\r\n      <>\r\n        {isLoadingContacts && <Loader />}\r\n        {error && <h2>404 Not Found</h2>}\r\n\r\n        <ul className={styles.list}>\r\n          {contacts.map(contact => {\r\n            const { id, name, number } = contact;\r\n\r\n            return <ContactItem key={id} name={name} number={number} id={id} />;\r\n          })}\r\n        </ul>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: getFilteredContacts(state),\r\n  isLoadingContacts: getIsLoading(state),\r\n  error: getError(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchContacts: () => dispatch(fetchContacts()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Filter.module.css';\r\nimport { connect } from 'react-redux';\r\nimport { filterContacts } from '../../redux/contacts/contacts-actions';\r\nimport { getFilter } from '../../redux/contacts/contacts-selectors';\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <label className={styles.label}>\r\n      Find contacts by name\r\n      <input\r\n        className={styles.input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  value: getFilter(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: ({ target: { value } }) => dispatch(filterContacts(value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport Section from './components/Section';\r\nimport ContactForm from './components/ContactForm';\r\nimport ContactList from './components/ContactList';\r\nimport Filter from './components/Filter';\r\nimport styles from './App.module.css';\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <Section title=\"Phonebook\">\r\n        <ContactForm />\r\n      </Section>\r\n\r\n      <Section title=\"Contacts\">\r\n        <Filter />\r\n        <ContactList />\r\n      </Section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  filterContacts,\r\n} from './contacts-actions';\r\n\r\nconst itemsReducer = createReducer([], {\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [payload, ...state],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filterReducer = createReducer('', {\r\n  [filterContacts]: (_, { payload }) => payload,\r\n});\r\n\r\nconst loadingReducer = createReducer(false, {\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nconst errorReducer = createReducer(null, {\r\n  [fetchContactsRequest]: () => null,\r\n  [fetchContactsError]: () => true,\r\n  [addContactRequest]: () => null,\r\n  [addContactError]: () => true,\r\n  [deleteContactRequest]: () => null,\r\n  [deleteContactError]: () => true,\r\n});\r\n\r\nconst contactsReducer = combineReducers({\r\n  items: itemsReducer,\r\n  filter: filterReducer,\r\n  loading: loadingReducer,\r\n  error: errorReducer,\r\n});\r\n\r\nexport default contactsReducer;\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport { contactsReducer } from './contacts';\r\n\r\nconst middleware = getDefaultMiddleware({\r\n  serializableCheck: {\r\n    ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n  },\r\n});\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n","import './index.css';\nimport 'modern-normalize/modern-normalize.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { store } from './redux/store';\nimport { Provider } from 'react-redux';\n// import { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}